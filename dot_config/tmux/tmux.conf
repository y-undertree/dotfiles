# config
unbind C-b
set -g prefix C-q
bind-key C-q send-prefix
set -sg escape-time 0
set -g mouse on
set -g mode-keys vi

# plugins
## tmux-fzf shift+f
TMUX_FZF_LAUNCH_KEY="k"

## tmux-fzf-session-switch
# thuanOwa/tmux-fzf-session-switch
# set -g @fzf-goto-session 'C-f'
# set -g @fzf-goto-win-width 120
# set -g @fzf-goto-win-height 30

## scrolling
set -g history-limit 10000

## tmux-fastcopy
set-option -g set-clipboard on
set-option -g @fastcopy-action pbcopy

## dracula
set -g @dracula-plugins "battery cpu-usage ram-usage gpu-usage network network-ping network-vpn ssh-session"
set -g @dracula-show-powerline true
set -g @dracula-border-contrast true
set -g @dracula-cpu-display-load false
set -g @dracula-show-left-icon session
set -g @dracula-show-flags true

## tpm plugins
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  dracula/tmux                     \
  tmux-plugins/tmux-open           \
  tmux-plugins/tmux-resurrect      \
  abhinav/tmux-fastcopy            \
  christoomey/vim-tmux-navigator   \
'

run-shell $XDG_CONFIG_HOME/tmux/plugins/tpm/tpm

# color scheme
set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",alacritty:RGB"

## forcus
#set-option -g focus-events on #Neovim側にフォーカス情報を渡すのに必要なようです。
#setw -g window-active-style bg=colour234
#setw -g window-style bg=colour240
#set -g pane-active-border-style fg=green,bg=colour240
#set -g pane-border-style fg=white,bg=colour240
set -g status-position top
set-option -g focus-events on

# custom keybind
bind-key w choose-tree -swZ -O time
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Reloaded!"
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind j previous-window
bind k next-window
bind s copy-mode
# bind l select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind h select-pane -R

## copy mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi H send -X start-of-line
bind-key -T copy-mode-vi L send -X end-of-line
bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy" \; send-keys -X clear-selection
bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# focus panel
# set active-inactive window styles
#フォーカスしているペインの設定
setw -g window-active-style 'bg=terminal,fg=terminal'
#フォーカスしていないペインの設定
setw -g window-style 'bg=terminal,fg=colour034'

# float wndow
bind t popup -xC -yC -w90% -h90% -d '#{pane_current_path}' -E 'PATH="$(brew --prefix git)/bin:$(brew --prefix git)/bin/share/git-core/contrib/diff-highlight/:${PATH}" tig status'
bind T clock-mode
bind p popup -xC -yC -w90% -h90% -E -d "#{pane_current_path}" '\
  if [ popup = $(tmux display -p -F "#{session_name}") ]; then \
    tmux detach-client ; \
  else \
    tmux attach -c $(tmux display -p -F "#{pane_current_path}") -t popup || tmux new -s popup ; \
  fi \
'
# can't open commannd
set -g default-command "reattach-to-user-namespace -l /bin/zsh"
